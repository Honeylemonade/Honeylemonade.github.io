{"pages":[],"posts":[{"title":"我是标题","text":"我是标题本文是测试文章测试文章 1234public String get(int a){//test123return \"123\";}","link":"/2019/11/17/%E5%90%8E%E7%AB%AF/Java%E5%9F%BA%E7%A1%80/%E5%9F%BA%E7%A1%80/"},{"title":"后端/Java基础/Java基础","text":"JAVA基本注释注释共分为三种： //：简单的注释 /* */：比较长的注释，可以是多行 /** */：javadoc，会自动的生成文档 数据类型JAVA共有8种数据类型，分别为4个整型，2个浮点型，1个字符型，1个boolean型 byte1个字节，short是2个字节，int是4个字节，long是8个字节 长整型数值后面有一个L后缀：4000000000L java没有无符号类型 浮点型不能用于金融的计算，比如：2.0-1.1=0.8999999，是因为二进制不能精确的表示1/10，就像十进制不能精确表示1/3（应该使用BigDecimal类） 在程序中尽量不要使用char类型 JAVA中所有的字符类型都占用2个字节，包括中文和英文 boolean（布尔）类型不能和整型相互转换 关于int类型 当位数较大，不方便观察时，可以使用_（下划线）进行分隔，例如：int a = 800_0000; 内存中存储的实际上是整形的补码 0x开头代表16进制，0开头代表8进制 123456789101112131415public static void test1() { int a = 0xf; int b = -0xf; int c = 0x8000_0000; int d = -0x8000_0000; System.out.println(a); System.out.println(b); System.out.println(c); System.out.println(d); //结果是 //15 //-15 //-2147483648 //-2147483648(由于0x8000_0000在底层修改了符号位，所以前面加的“-”不起作用) }","link":"/2019/11/17/%E5%90%8E%E7%AB%AF/Java%E5%9F%BA%E7%A1%80/Java%E5%9F%BA%E7%A1%80/"},{"title":"后端/Java基础/Java简介","text":"JAVA简介JAVA的一些冷知识 java applet 是关于页面显示的程序 JAVA原名是“Oak”，橡树的意思，但后来发现有已经有编程语言叫做Oak，所以改名为JAVA JAVA语言发展情况 版本 年份 新特性 1.0 1996 语言本身 1.1 1997 内部类 1.2 1998 strictfp修饰符 1.3 2000 无 1.4 2002 断言 5.0 2004 泛型类，for each，循环，自动装箱，枚举，静态导入 6 2006 无 7 2011 基于字串的switch，钻石操作符，二进制字面量，异常处理的改进 8 2014 lambda表达式，包含默认方法的接口，流和日期/时间库","link":"/2019/11/17/%E5%90%8E%E7%AB%AF/Java%E5%9F%BA%E7%A1%80/Java%E7%AE%80%E4%BB%8B/"}],"tags":[{"name":"Java基础","slug":"Java基础","link":"/tags/Java%E5%9F%BA%E7%A1%80/"},{"name":"测试","slug":"测试","link":"/tags/%E6%B5%8B%E8%AF%95/"}],"categories":[{"name":"后端","slug":"后端","link":"/categories/%E5%90%8E%E7%AB%AF/"},{"name":"进阶","slug":"后端/进阶","link":"/categories/%E5%90%8E%E7%AB%AF/%E8%BF%9B%E9%98%B6/"},{"name":"基础","slug":"后端/基础","link":"/categories/%E5%90%8E%E7%AB%AF/%E5%9F%BA%E7%A1%80/"},{"name":"前端","slug":"前端","link":"/categories/%E5%89%8D%E7%AB%AF/"},{"name":"测试","slug":"前端/测试","link":"/categories/%E5%89%8D%E7%AB%AF/%E6%B5%8B%E8%AF%95/"}]}